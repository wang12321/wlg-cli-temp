<template>
  <div>
    <el-container>
      <el-header style="height: auto">
        <search-form
          :form-options="formOptions"
          :form-data="formData"
          @submit="submit"
        >
          <template v-slot:button>
            <el-button type="primary" @click="buttonAction">新建</el-button>
          </template>
        </search-form>
      </el-header>
      <el-main>
        <TableComponent
          :table-data="tableData"
          :table-column="tableColumn"
          :options="options"
          :operates="operates"
        />
        <Pagination :key="pageKey" :page-data="pageData" @reloadData="reloadData" />
      </el-main>
    </el-container>
    <el-dialog :visible.sync="isShowDialogNode" title="新建" width="80%">
      <dialog-form
        :form-list="formList"
        :form-data="formData"
        :rules="rules"
        @submit="submitSave"
        @CANCEL="CANCEL"
      />
    </el-dialog>
  </div>
</template>

<script>
import { REQUIRED } from '@/utils/Reg/validate'

export default {
  name: 'Index',
  meta: {
    title: '增删基础模板',
    icon: 'form',
    sortIndex: 2
  },
  data() {
    return {
      isShowDialogNode: false,
      pageKey: 0, // 刷新分页组件key
      total: 0,
      rules: {
        cn_name: [
          REQUIRED('请输入中文名')
        ]
      },
      formData: {
      },
      operates: {
        isButton: false,
        width: '180px',
        label: '操作',
        align: 'left',
        list: [
          {
            label: '编辑',
            show: true,
            btnType: 'danger',
            method: (index, row) => {
              console.log(index, row)
            }
          },
          {
            label: '确定删除',
            show: true,
            btnType: 'danger',
            type: 'delete',
            method: (index, row) => {
              console.log(index, row)
            }
          }
        ]
      },
      tableData: [{
        id: 1,
        name: '测试',
        type: 'click',
        yData: 123,
        describe: ''
      }],
      tableColumn: [
        {
          label: 'ButtonID',
          prop: 'id',
          align: 'left'
        },
        {
          label: '别名',
          prop: 'name',
          align: 'left',
          formatter: (row) => {
            return `<span style="color: red">${row.name}</span>`
          }
        },
        {
          label: '事件类型',
          prop: 'type',
          align: 'left'
        }, {
          label: '昨日数据',
          prop: 'yData',
          align: 'left'
        }, {
          label: '描述',
          prop: 'describe',
          align: 'left'
        }
      ],
      options: {
        loading: false,
        border: true
      }
    }
  },
  computed: {
    pageData() {
      return { total: this.total, page: 1, rows: 20 }
    },
    formList() {
      return [
        { title: '昵称', key: 'cn_name', type: 'input', clearable: true },
        { titleShow: true, title: '包名', key: 'unionType', type: 'select', options: [{ value: 'all', label: '全部' }, { value: '1', label: '包名1' }, { value: '2', label: '包名2' }], label: 'label', value: 'value' },
        { title: '备注', clearable: true, key: 'remark', type: 'textarea' }
      ]
    },
    formOptions() {
      return [
        { titleShow: true, title: '应用名', placeholder: '应用名', key: 'object_id', type: 'input', clearable: true },
        { titleShow: true, title: '包名', key: 'unionType', type: 'select', options: [{ value: 'all', label: '全部' }, { value: '1', label: '包名1' }, { value: '2', label: '包名2' }], label: 'label', value: 'value' }
      ]
    }
  },
  mounted() {
    this.updata()
  },
  methods: {
    buttonAction() {
      this.isShowDialogNode = true
    },
    CANCEL() {
      this.isShowDialogNode = false
    },
    submitSave() {
      this.isShowDialogNode = false
    },
    handleSelectionChange(val) {
      console.log(val)
    },
    // 数据请求
    updata() {
      this.total = 100
      this.roundCount = 200
    },
    // 查询
    submit() {
      this.pageData.page = 1
      this.pageKey += 1
      this.updata()
    },
    // 分页
    reloadData() {
      this.updata()
    }
  }
}
</script>
