const promisify=require("util")["promisify"],fs=require("fs"),resolve=require("path")["resolve"],path=require("path");function fscreateReadStream(r){return new Promise((t,e)=>{fs.createReadStream(r,{encoding:"utf-8"}).on("data",e=>{t(e)})})}async function fscreateWriteStream(r,i,n){return await dirExists(r),new Promise((t,e)=>{fs.createWriteStream(r+"/"+i,{}).write(n,e=>{t(e)})})}function getStat(t){return new Promise((r,e)=>{fs.stat(t,(e,t)=>{r(!e&&t)})})}function unlink(r){return new Promise(async(e,t)=>{fs.existsSync(r)&&(fs.statSync(r).isDirectory()?(fs.readdirSync(r).forEach((e,t)=>{e=r+"/"+e;fs.statSync(e).isDirectory()?unlink(e):fs.unlinkSync(e)}),fs.rmdirSync(r)):fs.unlinkSync(r)),e(!0)})}function mkdir(r){return new Promise((t,e)=>{fs.mkdir(r,e=>{t(!e)})})}async function dirExists(e){var t=await getStat(e);if(t&&t.isDirectory())return!0;if(t)return!1;t=await dirExists(path.parse(e).dir);let r;return r=t?await mkdir(e):r}function isFileExisted(r){return new Promise(function(t,e){fs.access(r,e=>{t(!e)})})}function newStr(e,t,r){return e.slice(0,t=-1===t?0:t)+r+e.slice(t,e.length)}function format(e,t){var r,i={"M+":e.getMonth()+1,"d+":e.getDate(),"h+":e.getHours(),"m+":e.getMinutes(),"s+":e.getSeconds(),"q+":Math.floor((e.getMonth()+3)/3),S:e.getMilliseconds()};for(r in/(y+)/.test(t)&&(t=t.replace(RegExp.$1,(e.getFullYear()+"").substr(4-RegExp.$1.length))),i){var n=i[r];new RegExp("("+r+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?n:("00"+n).substr((""+n).length)))}return t}module.exports={fscreateReadStream:fscreateReadStream,fscreateWriteStream:fscreateWriteStream,isFileExisted:isFileExisted,newStr:newStr,format:format,unlink:unlink};